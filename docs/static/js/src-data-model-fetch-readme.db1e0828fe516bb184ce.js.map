{"version":3,"sources":["/Users/jz/shuyun/shuyun-ep-utils/src/data-model/fetch/README.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_jz_shuyun_shuyun_ep_utils_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"qXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,2BADR,2BAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,QADR,QAGAL,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,2BAAH,sBAA8EN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,SAA9E,+DAA6IN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAA7I,2EAAkNN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,SAAlN,SAAwQN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAAxQ,wLACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,OADR,OAGAL,OAAAE,EAAA,EAAAF,CAAA,qdACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,QADR,QAGAL,OAAAE,EAAA,EAAAF,CAAA,6MACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,OADR,OAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,6sBAqBLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,cADR,cAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,iCAApB,uEACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,qCAApB,2GACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,sCAApB,4BAA4GN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,OAA5G,sBACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,uCAApB,4BAA6GN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,OAA7G,4BACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,oCAApB,oDAA8GN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,OAA9G,4BACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,kCAApB,gRAMNV,EAAWY,gBAAiB","file":"static/js/src-data-model-fetch-readme.cb84db7d.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"datamodelfetchgenerator\"\n    }}>{`DataModelFetchGenerator`}</h1>\n    <h2 {...{\n      \"id\": \"what\"\n    }}>{`What`}</h2>\n    <p><inlineCode parentName=\"p\">{`DataModelFetchGenerator`}</inlineCode>{` 是一个`}<inlineCode parentName=\"p\">{`class`}</inlineCode>{`类，用来生成一个指定`}<inlineCode parentName=\"p\">{`DataModel`}</inlineCode>{`请求器，该请求器主要提供`}<inlineCode parentName=\"p\">{`fetch`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`deepFetch`}</inlineCode>{`两个函数，也提供出一些其他辅助属性和函数，后面的文档会讲到。`}</p>\n    <h2 {...{\n      \"id\": \"why\"\n    }}>{`Why`}</h2>\n    <p>{`在不同的应用系统中都可能会需要请求指定数据模型的数据，有时还会需要请求该模型链上的所有引用模型。为了保证处理上的一致性和可维护性，所以统一提供该工具类。`}</p>\n    <h2 {...{\n      \"id\": \"when\"\n    }}>{`When`}</h2>\n    <p>{`在任何子应用中如果需要请求指定数据模型的数据都建议使用该工具类。`}</p>\n    <h2 {...{\n      \"id\": \"how\"\n    }}>{`How`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { DataModelFetchGenerator } from '@shuyun-ep-team/utils/es/data-model/fetch';\n\n\n/**\n * 请求指定DataModel的详细数据\n * @params fqn string 数据模型的唯一标识，将会被作为缓存的 key 值\n */\nconst fetchDataModel = (fqn) => fetch(\\`/metadata/v1/types/\\${fqn}\\`);\n\n\nconst dataModelFetchService = new DataModelFetchGenerator(fetchDataModel);\n\n\n// 请求单个模型\ndataModelFetchService.fetch('data.mdm.User');\n\n// 深度递归请求整个模型链上的所有模型\ndataModelFetchService.deepFetch('data.mdm.User');\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"interfaces\"\n    }}>{`Interfaces`}</h2>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`DataModelFetchGenerator#fetch`}</inlineCode>{` 请求单个数据模型的数据`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`DataModelFetchGenerator#deepFetch`}</inlineCode>{` 深度递归请求整个模型链上的所有模型`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`DataModelFetchGenerator#clearCache`}</inlineCode>{` 清除所有`}<inlineCode parentName=\"li\">{`fqn`}</inlineCode>{`的缓存`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`DataModelFetchGenerator#removeCache`}</inlineCode>{` 删除指定`}<inlineCode parentName=\"li\">{`fqn`}</inlineCode>{`值的缓存`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`DataModelFetchGenerator#hasCache`}</inlineCode>{` 判断是否包含指定`}<inlineCode parentName=\"li\">{`fqn`}</inlineCode>{`值的缓存`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`DataModelFetchGenerator#models`}</inlineCode>{` 所有已请求过的数据模型的集合`}</li>\n    </ol>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}