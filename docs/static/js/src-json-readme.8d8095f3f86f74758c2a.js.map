{"version":3,"sources":["/Users/jz/shuyun/shuyun-ep-utils/src/json/README.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_jz_shuyun_shuyun_ep_utils_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"0WAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iCADR,iCAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,QADR,QAGAL,OAAAE,EAAA,EAAAF,CAAA,mBAASA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,eAAT,iEACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,OADR,OAGAL,OAAAE,EAAA,EAAAF,CAAA,wBAASA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,qBAAT,oGAA2FN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,eAA3F,8RACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,QADR,QAGAL,OAAAE,EAAA,EAAAF,CAAA,oCAAWA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,qBAAX,oGACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,OADR,OAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,kTAUTX,EAAWY,gBAAiB","file":"static/js/src-json-readme.5c71f10a.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"json-相关函数\"\n    }}>{`JSON 相关函数`}</h1>\n    <h2 {...{\n      \"id\": \"what\"\n    }}>{`What`}</h2>\n    <p>{`对 `}<inlineCode parentName=\"p\">{`window.JSON`}</inlineCode>{` 对象上部分函数的包装`}</p>\n    <h2 {...{\n      \"id\": \"why\"\n    }}>{`Why`}</h2>\n    <p>{`执行`}<inlineCode parentName=\"p\">{`window.JSON.parse`}</inlineCode>{`函数如果参数是非预期的值时可能会 `}<inlineCode parentName=\"p\">{`throw error`}</inlineCode>{`，导致程序挂起不可用。提供的包装过的函数可以在第二个参数中设置默认值，当执行报错时会返回该值。`}</p>\n    <h2 {...{\n      \"id\": \"when\"\n    }}>{`When`}</h2>\n    <p>{`任何使用`}<inlineCode parentName=\"p\">{`window.JSON.parse`}</inlineCode>{`函数的地方都应该使用该包装函数。`}</p>\n    <h2 {...{\n      \"id\": \"how\"\n    }}>{`How`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { JsonWrapper } from '@shuyun-ep-team/utils/es/dom';\n\nconst user = JsonWrapper.parse('{\"name\":\"Shuyun\"}',{name:''});\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}